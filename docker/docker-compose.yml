version: '3.9'
name: "blockscout-hardhat-network"
services:
  redis-db:
    image: 'redis:alpine'
    container_name: redis-db
    command: redis-server
    volumes:
      - redis-data:/data

  db:
    image: postgres:17
    user: root
    shm_size: 256m
    restart: always
    container_name: 'db'
    command: postgres -c 'max_connections=200' -c 'client_connection_check_interval=60000'
    environment:
      POSTGRES_DB: 'blockscout'
      POSTGRES_USER: 'blockscout'
      POSTGRES_PASSWORD: 'ceWb1MeLBEeOIfk65gU8EjF8'
    ports:
      - target: 5432
        published: 7432
    volumes:
      - blockscout-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U blockscout -d blockscout"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  backend:
    depends_on:
      - db
      - redis-db
    image: ghcr.io/blockscout/${DOCKER_REPO:-blockscout}:${DOCKER_TAG:-latest}
    pull_policy: always
    restart: always
    stop_grace_period: 5m
    container_name: 'backend'
    command: sh -c "bin/blockscout eval \"Elixir.Explorer.ReleaseTasks.create_and_migrate()\" && bin/blockscout start"
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    env_file:
      - ./envs/common-blockscout.env
    volumes:
      - back-logs:/app/logs/
      - back-dets:/app/dets/
    links:
      - db:database
    environment:
        ETHEREUM_JSONRPC_VARIANT: 'geth'
        ETHEREUM_JSONRPC_WS_URL: ws://host.docker.internal:8545/
        INDEXER_DISABLE_PENDING_TRANSACTIONS_FETCHER: 'true'
        INDEXER_INTERNAL_TRANSACTIONS_TRACER_TYPE: 'opcode'
        CHAIN_ID: '31337'

  visualizer:
    image: ghcr.io/blockscout/visualizer:${VISUALIZER_DOCKER_TAG:-latest}
    pull_policy: always
    platform: linux/amd64
    restart: always
    container_name: 'visualizer'
    env_file:
      - ./envs/common-visualizer.env

  sig-provider:
    image: ghcr.io/blockscout/sig-provider:${SIG_PROVIDER_DOCKER_TAG:-latest}
    pull_policy: always
    platform: linux/amd64
    restart: always
    container_name: 'sig-provider'

  frontend:
    depends_on:
      - backend
    image: ghcr.io/blockscout/frontend:${FRONTEND_DOCKER_TAG:-latest}
    pull_policy: always
    platform: linux/amd64
    restart: always
    container_name: 'frontend'
    env_file:
      - ./envs/common-frontend.env
      - ./envs/.env
    environment:
      NEXT_PUBLIC_NETWORK_ID: '31337'
      NEXT_PUBLIC_NETWORK_RPC_URL: http://host.docker.internal:8545/

  stats-db:
    image: postgres:17
    user: root
    shm_size: 256m
    restart: always
    container_name: 'stats-db'
    command: postgres -c 'max_connections=200'
    environment:
      POSTGRES_DB: 'stats'
      POSTGRES_USER: 'stats'
      POSTGRES_PASSWORD: 'n0uejXPl61ci6ldCuE2gQU5Y'
    ports:
      - target: 5432
        published: 7433
    volumes:
      - stats-db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U stats -d stats" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  stats:
    depends_on:
      - stats-db
      - backend
    image: ghcr.io/blockscout/stats:${STATS_DOCKER_TAG:-latest}
    pull_policy: always
    platform: linux/amd64
    restart: always
    container_name: 'stats'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    env_file:
      - ./envs/common-stats.env
    environment:
      - STATS__DB_URL=${STATS__DB_URL:-postgres://stats:n0uejXPl61ci6ldCuE2gQU5Y@stats-db:5432/stats}
      - STATS__BLOCKSCOUT_DB_URL=${STATS__BLOCKSCOUT_DB_URL:-postgresql://blockscout:ceWb1MeLBEeOIfk65gU8EjF8@db:5432/blockscout}
      - STATS__CREATE_DATABASE=${STATS__CREATE_DATABASE:-true}
      - STATS__RUN_MIGRATIONS=${STATS__RUN_MIGRATIONS:-true}

  user-ops-indexer:
    depends_on:
      - db
      - backend
      - local-node
    image: ghcr.io/blockscout/user-ops-indexer:${USER_OPS_INDEXER_DOCKER_TAG:-latest}
    pull_policy: always
    platform: linux/amd64
    restart: always
    container_name: 'user-ops-indexer'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    env_file:
      - ./envs/common-user-ops-indexer.env
    environment:
      - USER_OPS_INDEXER__INDEXER__RPC_URL=${USER_OPS_INDEXER__INDEXER__RPC_URL:-ws://host.docker.internal:8545/}
      - USER_OPS_INDEXER__DATABASE__CONNECT__URL=${USER_OPS_INDEXER__DATABASE__CONNECT__URL:-postgresql://blockscout:ceWb1MeLBEeOIfk65gU8EjF8@db:5432/blockscout}
      - USER_OPS_INDEXER__DATABASE__RUN_MIGRATIONS=true

  proxy:
    depends_on:
      - backend
      - frontend
      - stats
    image: nginx
    container_name: proxy
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    volumes:
      - ./nginx:/etc/nginx/templates
    environment:
      BACK_PROXY_PASS: ${BACK_PROXY_PASS:-http://backend:4000}
      FRONT_PROXY_PASS: ${FRONT_PROXY_PASS:-http://frontend:3000}
    ports:
      - target: 80
        published: 1337
      - target: 8080
        published: 8080
      - target: 8081
        published: 8081

  local-node:
    image: node:18
    container_name: hardhat-node
    working_dir: /app
    ports:
      - "8545:8545"
    volumes:
      - ./hardhat:/app
    command: >
      sh -c "
        npm install &&
        npx hardhat node
      "
    healthcheck:
      test: [ "CMD", "curl", "-s", "http://localhost:8545" ]
      interval: 5s
      timeout: 3s
      retries: 5


volumes:
  redis-data:
  blockscout-db-data:
  stats-db-data:
  back-logs:
  back-dets:
